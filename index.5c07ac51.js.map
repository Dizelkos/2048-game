{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar buttonStart = document.querySelector(\".start\");\nvar tableField = document.querySelector(\"tbody\");\nvar scoreGame = document.querySelector(\".game_score\");\nvar messageStart = document.querySelector(\".message_start\");\nvar messageLose = document.querySelector(\".message_lose\");\nvar messageWin = document.querySelector(\".message_win\");\nvar score = 0;\nvar rows = 4;\nvar columns = 4;\nvar board = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\nbuttonStart.addEventListener(\"click\", gameStart);\n// Зупуск гри\nfunction gameStart() {\n    board = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ];\n    score = 0;\n    buttonStart.classList.replace(\"start\", \"restart\");\n    buttonStart.innerText = \"Restart\";\n    messageStart.classList.add(\"hidden\");\n    addRandomNumber();\n    addRandomNumber();\n}\n// Переміщення вгору\nfunction moveUp() {\n    var merged = false;\n    for(var j = 0; j < columns; j++){\n        for(var i = 1; i < rows; i++)if (board[i][j] !== 0) {\n            var currentRow = i;\n            while(currentRow > 0){\n                if (board[currentRow - 1][j] === 0) {\n                    // Пересунути елемент вгору\n                    board[currentRow - 1][j] = board[currentRow][j];\n                    board[currentRow][j] = 0;\n                    currentRow--;\n                    merged = true;\n                } else if (board[currentRow - 1][j] === board[currentRow][j]) {\n                    // Об'єднати два елементи з однаковими значеннями\n                    board[currentRow - 1][j] *= 2;\n                    score += board[currentRow - 1][j];\n                    board[currentRow][j] = 0;\n                    merged = true;\n                    break;\n                } else break;\n            }\n        }\n    }\n    if (merged) addRandomNumber();\n    renderHtml();\n}\n// Переміщення вниз\nfunction moveDown() {\n    var merged = false;\n    for(var j = 0; j < columns; j++){\n        for(var i = rows - 2; i >= 0; i--)if (board[i][j] !== 0) {\n            var currentRow = i;\n            while(currentRow < rows - 1){\n                if (board[currentRow + 1][j] === 0) {\n                    // Пересунути елемент вниз\n                    board[currentRow + 1][j] = board[currentRow][j];\n                    board[currentRow][j] = 0;\n                    currentRow++;\n                    merged = true;\n                } else if (board[currentRow + 1][j] === board[currentRow][j]) {\n                    // Об'єднати два елементи з однаковими значеннями\n                    board[currentRow + 1][j] *= 2;\n                    score += board[currentRow + 1][j];\n                    board[currentRow][j] = 0;\n                    merged = true;\n                    break;\n                } else break;\n            }\n        }\n    }\n    if (merged) addRandomNumber();\n    renderHtml();\n}\n// Переміщення вліво\nfunction moveLeft() {\n    var merged = false;\n    for(var i = 0; i < rows; i++){\n        for(var j = 1; j < columns; j++)if (board[i][j] !== 0) {\n            var currentCol = j;\n            while(currentCol > 0){\n                if (board[i][currentCol - 1] === 0) {\n                    // Пересунути елемент вліво\n                    board[i][currentCol - 1] = board[i][currentCol];\n                    board[i][currentCol] = 0;\n                    currentCol--;\n                    merged = true;\n                } else if (board[i][currentCol - 1] === board[i][currentCol]) {\n                    // Об'єднати два елементи з однаковими значеннями\n                    board[i][currentCol - 1] *= 2;\n                    score += board[i][currentCol - 1];\n                    board[i][currentCol] = 0;\n                    merged = true;\n                    break;\n                } else break;\n            }\n        }\n    }\n    if (merged) addRandomNumber();\n    renderHtml();\n}\n// Переміщення вправо\nfunction moveRight() {\n    var merged = false;\n    for(var i = 0; i < rows; i++){\n        for(var j = columns - 2; j >= 0; j--)if (board[i][j] !== 0) {\n            var currentCol = j;\n            while(currentCol < columns - 1){\n                if (board[i][currentCol + 1] === 0) {\n                    // Пересунути елемент вправо\n                    board[i][currentCol + 1] = board[i][currentCol];\n                    board[i][currentCol] = 0;\n                    currentCol++;\n                    merged = true;\n                } else if (board[i][currentCol + 1] === board[i][currentCol]) {\n                    // Об'єднати два елементи з однаковими значеннями\n                    board[i][currentCol + 1] *= 2;\n                    score += board[i][currentCol + 1];\n                    board[i][currentCol] = 0;\n                    merged = true;\n                    break;\n                } else break;\n            }\n        }\n    }\n    if (merged) addRandomNumber();\n    renderHtml();\n}\n// Обробка натискання клавіш\nwindow.addEventListener(\"keydown\", function(e) {\n    if (!buttonStart.classList.contains(\"restart\")) return;\n    e.preventDefault();\n    switch(e.key){\n        case \"ArrowUp\":\n            moveUp();\n            break;\n        case \"ArrowDown\":\n            moveDown();\n            break;\n        case \"ArrowLeft\":\n            moveLeft();\n            break;\n        case \"ArrowRight\":\n            moveRight();\n            break;\n    }\n    renderHtml();\n});\n// Візуалізація грального поля\nfunction renderHtml() {\n    for(var i = 0; i < columns; i++)for(var j = 0; j < columns; j++){\n        var currentCell = tableField.rows[i].cells[j];\n        var value = board[i][j];\n        currentCell.innerText = \"\";\n        currentCell.classList.value = \"\";\n        currentCell.className = \"field_cell\";\n        if (value > 0) {\n            currentCell.innerText = value;\n            currentCell.classList.add(\"field_cell__\".concat(value));\n        }\n        if (value === 2048) {\n            messageWin.classList.remove(\"hidden\");\n            buttonStart.classList.replace(\"restart\", \"start\");\n            buttonStart.innerText = \"Start\";\n        }\n    }\n    scoreGame.innerText = score;\n    if (isGameOver()) messageLose.classList.remove(\"hidden\");\n    else messageLose.classList.add(\"hidden\");\n}\n// Чи є порожні комірки на гральному полі\nfunction hasEmptyCell() {\n    return board.some(function(row) {\n        return row.some(function(cell) {\n            return !cell;\n        });\n    });\n}\n// Викидання випадкового числа\nfunction addRandomNumber() {\n    if (!hasEmptyCell()) return;\n    var found = false;\n    while(!found){\n        var num = Math.random() < 0.5 ? 2 : 4;\n        var r = Math.floor(Math.random() * rows);\n        var c = Math.floor(Math.random() * columns);\n        if (board[r][c] === 0) {\n            board[r][c] = num;\n            found = true;\n        }\n    }\n    renderHtml();\n}\n// Кінець гри\nfunction isGameOver() {\n    if (hasEmptyCell()) return false;\n    for(var i = 0; i < rows; i++)for(var j = 0; j < columns - 1; j++){\n        var isNextSame = board[i][j] === board[i][j + 1];\n        var isBelowSame = board[j][i] === board[j + 1][i];\n        if (isNextSame || isBelowSame) return false;\n    }\n    return true;\n}\n\n//# sourceMappingURL=index.5c07ac51.js.map\n","'use strict';\n\nconst buttonStart = document.querySelector('.start');\nconst tableField = document.querySelector('tbody');\nconst scoreGame = document.querySelector('.game_score');\n\nconst messageStart = document.querySelector('.message_start');\nconst messageLose = document.querySelector('.message_lose');\nconst messageWin = document.querySelector('.message_win');\n\nlet score = 0;\nconst rows = 4;\nconst columns = 4;\n\nlet board = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nbuttonStart.addEventListener('click', gameStart);\n\n// Зупуск гри\nfunction gameStart() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n  score = 0;\n\n  buttonStart.classList.replace('start', 'restart');\n  buttonStart.innerText = 'Restart';\n\n  messageStart.classList.add('hidden');\n\n  addRandomNumber();\n  addRandomNumber();\n};\n\n// Переміщення вгору\nfunction moveUp() {\n  let merged = false;\n\n  for (let j = 0; j < columns; j++) {\n    for (let i = 1; i < rows; i++) {\n      if (board[i][j] !== 0) {\n        let currentRow = i;\n\n        while (currentRow > 0) {\n          if (board[currentRow - 1][j] === 0) {\n            // Пересунути елемент вгору\n            board[currentRow - 1][j] = board[currentRow][j];\n            board[currentRow][j] = 0;\n            currentRow--;\n            merged = true;\n          } else if (board[currentRow - 1][j] === board[currentRow][j]) {\n            // Об'єднати два елементи з однаковими значеннями\n            board[currentRow - 1][j] *= 2;\n            score += board[currentRow - 1][j];\n            board[currentRow][j] = 0;\n            merged = true;\n            break;\n          } else {\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  if (merged) {\n    addRandomNumber();\n  }\n\n  renderHtml();\n}\n\n// Переміщення вниз\nfunction moveDown() {\n  let merged = false;\n\n  for (let j = 0; j < columns; j++) {\n    for (let i = rows - 2; i >= 0; i--) {\n      if (board[i][j] !== 0) {\n        let currentRow = i;\n\n        while (currentRow < rows - 1) {\n          if (board[currentRow + 1][j] === 0) {\n            // Пересунути елемент вниз\n            board[currentRow + 1][j] = board[currentRow][j];\n            board[currentRow][j] = 0;\n            currentRow++;\n            merged = true;\n          } else if (board[currentRow + 1][j] === board[currentRow][j]) {\n            // Об'єднати два елементи з однаковими значеннями\n            board[currentRow + 1][j] *= 2;\n            score += board[currentRow + 1][j];\n            board[currentRow][j] = 0;\n            merged = true;\n            break;\n          } else {\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  if (merged) {\n    addRandomNumber();\n  }\n\n  renderHtml();\n}\n\n// Переміщення вліво\nfunction moveLeft() {\n  let merged = false;\n\n  for (let i = 0; i < rows; i++) {\n    for (let j = 1; j < columns; j++) {\n      if (board[i][j] !== 0) {\n        let currentCol = j;\n\n        while (currentCol > 0) {\n          if (board[i][currentCol - 1] === 0) {\n            // Пересунути елемент вліво\n            board[i][currentCol - 1] = board[i][currentCol];\n            board[i][currentCol] = 0;\n            currentCol--;\n            merged = true;\n          } else if (board[i][currentCol - 1] === board[i][currentCol]) {\n            // Об'єднати два елементи з однаковими значеннями\n            board[i][currentCol - 1] *= 2;\n            score += board[i][currentCol - 1];\n            board[i][currentCol] = 0;\n            merged = true;\n            break;\n          } else {\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  if (merged) {\n    addRandomNumber();\n  }\n\n  renderHtml();\n}\n\n// Переміщення вправо\nfunction moveRight() {\n  let merged = false;\n\n  for (let i = 0; i < rows; i++) {\n    for (let j = columns - 2; j >= 0; j--) {\n      if (board[i][j] !== 0) {\n        let currentCol = j;\n\n        while (currentCol < columns - 1) {\n          if (board[i][currentCol + 1] === 0) {\n            // Пересунути елемент вправо\n            board[i][currentCol + 1] = board[i][currentCol];\n            board[i][currentCol] = 0;\n            currentCol++;\n            merged = true;\n          } else if (board[i][currentCol + 1] === board[i][currentCol]) {\n            // Об'єднати два елементи з однаковими значеннями\n            board[i][currentCol + 1] *= 2;\n            score += board[i][currentCol + 1];\n            board[i][currentCol] = 0;\n            merged = true;\n            break;\n          } else {\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  if (merged) {\n    addRandomNumber();\n  }\n\n  renderHtml();\n}\n\n// Обробка натискання клавіш\nwindow.addEventListener('keydown', (e) => {\n  if (!buttonStart.classList.contains('restart')) {\n    return;\n  };\n\n  e.preventDefault();\n\n  switch (e.key) {\n    case 'ArrowUp':\n      moveUp();\n      break;\n\n    case 'ArrowDown':\n      moveDown();\n      break;\n\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n\n    case 'ArrowRight':\n      moveRight();\n      break;\n  }\n\n  renderHtml();\n});\n\n// Візуалізація грального поля\nfunction renderHtml() {\n  for (let i = 0; i < columns; i++) {\n    for (let j = 0; j < columns; j++) {\n      const currentCell = tableField.rows[i].cells[j];\n      const value = board[i][j];\n\n      currentCell.innerText = '';\n      currentCell.classList.value = '';\n      currentCell.className = `field_cell`;\n\n      if (value > 0) {\n        currentCell.innerText = value;\n        currentCell.classList.add(`field_cell__${value}`);\n      }\n\n      if (value === 2048) {\n        messageWin.classList.remove('hidden');\n        buttonStart.classList.replace('restart', 'start');\n        buttonStart.innerText = 'Start';\n      }\n    }\n  }\n\n  scoreGame.innerText = score;\n\n  if (isGameOver()) {\n    messageLose.classList.remove('hidden');\n  } else {\n    messageLose.classList.add('hidden');\n  }\n}\n\n// Чи є порожні комірки на гральному полі\nfunction hasEmptyCell() {\n  return board.some(row => row.some(cell => !cell));\n}\n\n// Викидання випадкового числа\nfunction addRandomNumber() {\n  if (!hasEmptyCell()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const num = Math.random() < 0.5 ? 2 : 4;\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    if (board[r][c] === 0) {\n      board[r][c] = num;\n      found = true;\n    }\n  }\n\n  renderHtml();\n}\n\n// Кінець гри\nfunction isGameOver() {\n  if (hasEmptyCell()) {\n    return false;\n  }\n\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < columns - 1; j++) {\n      const isNextSame = board[i][j] === board[i][j + 1];\n      const isBelowSame = board[j][i] === board[j + 1][i];\n\n      if (isNextSame || isBelowSame) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n"],"names":["buttonStart","document","querySelector","tableField","scoreGame","messageStart","messageLose","messageWin","score","board","renderHtml","i","j","currentCell","rows","cells","value","innerText","classList","className","add","concat","remove","replace","isGameOver","hasEmptyCell","columns","isNextSame","isBelowSame","some","row","cell","addRandomNumber","found","num","Math","random","r","floor","c","addEventListener","window","e","contains","preventDefault","key","moveUp","merged","currentRow","moveDown","moveLeft","currentCol","moveRight"],"version":3,"file":"index.5c07ac51.js.map"}